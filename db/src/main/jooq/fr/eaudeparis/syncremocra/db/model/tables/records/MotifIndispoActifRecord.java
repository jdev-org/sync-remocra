/*
 * This file is generated by jOOQ.
 */
package fr.eaudeparis.syncremocra.db.model.tables.records;


import fr.eaudeparis.syncremocra.db.model.tables.MotifIndispoActif;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MotifIndispoActifRecord extends TableRecordImpl<MotifIndispoActifRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>edp.motif_indispo_actif.reference</code>.
     */
    public MotifIndispoActifRecord setReference(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>edp.motif_indispo_actif.reference</code>.
     */
    public String getReference() {
        return (String) get(0);
    }

    /**
     * Setter for <code>edp.motif_indispo_actif.motif</code>.
     */
    public MotifIndispoActifRecord setMotif(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>edp.motif_indispo_actif.motif</code>.
     */
    public String getMotif() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return MotifIndispoActif.MOTIF_INDISPO_ACTIF.REFERENCE;
    }

    @Override
    public Field<String> field2() {
        return MotifIndispoActif.MOTIF_INDISPO_ACTIF.MOTIF;
    }

    @Override
    public String component1() {
        return getReference();
    }

    @Override
    public String component2() {
        return getMotif();
    }

    @Override
    public String value1() {
        return getReference();
    }

    @Override
    public String value2() {
        return getMotif();
    }

    @Override
    public MotifIndispoActifRecord value1(String value) {
        setReference(value);
        return this;
    }

    @Override
    public MotifIndispoActifRecord value2(String value) {
        setMotif(value);
        return this;
    }

    @Override
    public MotifIndispoActifRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MotifIndispoActifRecord
     */
    public MotifIndispoActifRecord() {
        super(MotifIndispoActif.MOTIF_INDISPO_ACTIF);
    }

    /**
     * Create a detached, initialised MotifIndispoActifRecord
     */
    public MotifIndispoActifRecord(String reference, String motif) {
        super(MotifIndispoActif.MOTIF_INDISPO_ACTIF);

        setReference(reference);
        setMotif(motif);
    }
}
