/*
 * This file is generated by jOOQ.
 */
package fr.eaudeparis.syncremocra.db.model.tables;

import fr.eaudeparis.syncremocra.db.model.Edp;
import fr.eaudeparis.syncremocra.db.model.Keys;
import fr.eaudeparis.syncremocra.db.model.tables.records.PullMessageRecord;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class PullMessage extends TableImpl<PullMessageRecord> {

  private static final long serialVersionUID = 1L;

  /** The reference instance of <code>edp.pull_message</code> */
  public static final PullMessage PULL_MESSAGE = new PullMessage();

  /** The class holding records for this type */
  @Override
  public Class<PullMessageRecord> getRecordType() {
    return PullMessageRecord.class;
  }

  /** The column <code>edp.pull_message.id</code>. */
  public final TableField<PullMessageRecord, Integer> ID =
      createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

  /** The column <code>edp.pull_message.date</code>. */
  public final TableField<PullMessageRecord, LocalDateTime> DATE =
      createField(
          DSL.name("date"),
          SQLDataType.LOCALDATETIME(6).defaultValue(DSL.field("now()", SQLDataType.LOCALDATETIME)),
          this,
          "");

  /** The column <code>edp.pull_message.date_modification</code>. */
  public final TableField<PullMessageRecord, LocalDateTime> DATE_MODIFICATION =
      createField(DSL.name("date_modification"), SQLDataType.LOCALDATETIME(6), this, "");

  /** The column <code>edp.pull_message.operation</code>. */
  public final TableField<PullMessageRecord, String> OPERATION =
      createField(DSL.name("operation"), SQLDataType.VARCHAR, this, "");

  /** The column <code>edp.pull_message.type</code>. */
  public final TableField<PullMessageRecord, String> TYPE =
      createField(DSL.name("type"), SQLDataType.VARCHAR, this, "");

  /** The column <code>edp.pull_message.hydrant</code>. */
  public final TableField<PullMessageRecord, String> HYDRANT =
      createField(DSL.name("hydrant"), SQLDataType.VARCHAR, this, "");

  private PullMessage(Name alias, Table<PullMessageRecord> aliased) {
    this(alias, aliased, null);
  }

  private PullMessage(Name alias, Table<PullMessageRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  /** Create an aliased <code>edp.pull_message</code> table reference */
  public PullMessage(String alias) {
    this(DSL.name(alias), PULL_MESSAGE);
  }

  /** Create an aliased <code>edp.pull_message</code> table reference */
  public PullMessage(Name alias) {
    this(alias, PULL_MESSAGE);
  }

  /** Create a <code>edp.pull_message</code> table reference */
  public PullMessage() {
    this(DSL.name("pull_message"), null);
  }

  public <O extends Record> PullMessage(Table<O> child, ForeignKey<O, PullMessageRecord> key) {
    super(child, key, PULL_MESSAGE);
  }

  @Override
  public Schema getSchema() {
    return Edp.EDP;
  }

  @Override
  public Identity<PullMessageRecord, Integer> getIdentity() {
    return (Identity<PullMessageRecord, Integer>) super.getIdentity();
  }

  @Override
  public UniqueKey<PullMessageRecord> getPrimaryKey() {
    return Keys.PULL_MESSAGE_PKEY;
  }

  @Override
  public List<UniqueKey<PullMessageRecord>> getKeys() {
    return Arrays.<UniqueKey<PullMessageRecord>>asList(Keys.PULL_MESSAGE_PKEY);
  }

  @Override
  public PullMessage as(String alias) {
    return new PullMessage(DSL.name(alias), this);
  }

  @Override
  public PullMessage as(Name alias) {
    return new PullMessage(alias, this);
  }

  /** Rename this table */
  @Override
  public PullMessage rename(String name) {
    return new PullMessage(DSL.name(name), null);
  }

  /** Rename this table */
  @Override
  public PullMessage rename(Name name) {
    return new PullMessage(name, null);
  }

  // -------------------------------------------------------------------------
  // Row6 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row6<Integer, LocalDateTime, LocalDateTime, String, String, String> fieldsRow() {
    return (Row6) super.fieldsRow();
  }
}
