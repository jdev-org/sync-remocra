/*
 * This file is generated by jOOQ.
 */
package fr.eaudeparis.syncremocra.db.model.tables;


import fr.eaudeparis.syncremocra.db.binding.PointBinding;
import fr.eaudeparis.syncremocra.db.model.Edp;
import fr.eaudeparis.syncremocra.db.model.Keys;
import fr.eaudeparis.syncremocra.db.model.tables.records.TracabilitePeiRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.locationtech.jts.geom.Point;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TracabilitePei extends TableImpl<TracabilitePeiRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>edp.tracabilite_pei</code>
     */
    public static final TracabilitePei TRACABILITE_PEI = new TracabilitePei();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TracabilitePeiRecord> getRecordType() {
        return TracabilitePeiRecord.class;
    }

    /**
     * The column <code>edp.tracabilite_pei.id</code>.
     */
    public final TableField<TracabilitePeiRecord, Integer> ID = createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>edp.tracabilite_pei.reference</code>.
     */
    public final TableField<TracabilitePeiRecord, String> REFERENCE = createField(DSL.name("reference"), SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>edp.tracabilite_pei.geometry1</code>.
     */
    public final TableField<TracabilitePeiRecord, Point> GEOMETRY1 = createField(DSL.name("geometry1"), org.jooq.impl.DefaultDataType.getDefaultDataType("\"public\".\"geometry\""), this, "", new PointBinding());

    /**
     * The column <code>edp.tracabilite_pei.type_objet</code>.
     */
    public final TableField<TracabilitePeiRecord, String> TYPE_OBJET = createField(DSL.name("type_objet"), SQLDataType.VARCHAR(15), this, "");

    /**
     * The column <code>edp.tracabilite_pei.prive</code>.
     */
    public final TableField<TracabilitePeiRecord, Integer> PRIVE = createField(DSL.name("prive"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>edp.tracabilite_pei.precision_pei_prive</code>.
     */
    public final TableField<TracabilitePeiRecord, String> PRECISION_PEI_PRIVE = createField(DSL.name("precision_pei_prive"), SQLDataType.VARCHAR(73), this, "");

    /**
     * The column <code>edp.tracabilite_pei.adresse</code>.
     */
    public final TableField<TracabilitePeiRecord, String> ADRESSE = createField(DSL.name("adresse"), SQLDataType.VARCHAR(107), this, "");

    /**
     * The column <code>edp.tracabilite_pei.notes_localisation</code>.
     */
    public final TableField<TracabilitePeiRecord, String> NOTES_LOCALISATION = createField(DSL.name("notes_localisation"), SQLDataType.VARCHAR(120), this, "");

    /**
     * The column <code>edp.tracabilite_pei.diametre</code>.
     */
    public final TableField<TracabilitePeiRecord, Integer> DIAMETRE = createField(DSL.name("diametre"), SQLDataType.INTEGER, this, "");

    /**
     * The column <code>edp.tracabilite_pei.modele</code>.
     */
    public final TableField<TracabilitePeiRecord, String> MODELE = createField(DSL.name("modele"), SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>edp.tracabilite_pei.diametre_canalisation</code>.
     */
    public final TableField<TracabilitePeiRecord, String> DIAMETRE_CANALISATION = createField(DSL.name("diametre_canalisation"), SQLDataType.VARCHAR(4000), this, "");

    /**
     * The column <code>edp.tracabilite_pei.etat</code>.
     */
    public final TableField<TracabilitePeiRecord, String> ETAT = createField(DSL.name("etat"), SQLDataType.VARCHAR(12), this, "");

    /**
     * The column <code>edp.tracabilite_pei.date_maj_p</code>.
     */
    public final TableField<TracabilitePeiRecord, LocalDateTime> DATE_MAJ_P = createField(DSL.name("date_maj_p"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>edp.tracabilite_pei.date_maj_e</code>.
     */
    public final TableField<TracabilitePeiRecord, LocalDateTime> DATE_MAJ_E = createField(DSL.name("date_maj_e"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>edp.tracabilite_pei.date_traca</code>.
     */
    public final TableField<TracabilitePeiRecord, LocalDateTime> DATE_TRACA = createField(DSL.name("date_traca"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>edp.tracabilite_pei.date_essai</code>.
     */
    public final TableField<TracabilitePeiRecord, LocalDateTime> DATE_ESSAI = createField(DSL.name("date_essai"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>edp.tracabilite_pei.essai_pression_statique</code>.
     */
    public final TableField<TracabilitePeiRecord, BigDecimal> ESSAI_PRESSION_STATIQUE = createField(DSL.name("essai_pression_statique"), SQLDataType.NUMERIC(8, 2), this, "");

    /**
     * The column <code>edp.tracabilite_pei.essai_pression_dynamique</code>.
     */
    public final TableField<TracabilitePeiRecord, BigDecimal> ESSAI_PRESSION_DYNAMIQUE = createField(DSL.name("essai_pression_dynamique"), SQLDataType.NUMERIC(8, 2), this, "");

    /**
     * The column <code>edp.tracabilite_pei.essai_debit</code>.
     */
    public final TableField<TracabilitePeiRecord, BigDecimal> ESSAI_DEBIT = createField(DSL.name("essai_debit"), SQLDataType.NUMERIC(8, 2), this, "");

    /**
     * The column <code>edp.tracabilite_pei.date_maj_qp</code>.
     */
    public final TableField<TracabilitePeiRecord, LocalDateTime> DATE_MAJ_QP = createField(DSL.name("date_maj_qp"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>edp.tracabilite_pei.date_derniere_visite</code>.
     */
    public final TableField<TracabilitePeiRecord, LocalDateTime> DATE_DERNIERE_VISITE = createField(DSL.name("date_derniere_visite"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>edp.tracabilite_pei.type_derniere_visite</code>.
     */
    public final TableField<TracabilitePeiRecord, String> TYPE_DERNIERE_VISITE = createField(DSL.name("type_derniere_visite"), SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>edp.tracabilite_pei.date_maj_cf</code>.
     */
    public final TableField<TracabilitePeiRecord, LocalDateTime> DATE_MAJ_CF = createField(DSL.name("date_maj_cf"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>edp.tracabilite_pei.date_maj_np</code>.
     */
    public final TableField<TracabilitePeiRecord, LocalDateTime> DATE_MAJ_NP = createField(DSL.name("date_maj_np"), SQLDataType.LOCALDATETIME(6), this, "");

    /**
     * The column <code>edp.tracabilite_pei.date_maj_mj</code>.
     */
    public final TableField<TracabilitePeiRecord, LocalDateTime> DATE_MAJ_MJ = createField(DSL.name("date_maj_mj"), SQLDataType.LOCALDATETIME(6), this, "");

    private TracabilitePei(Name alias, Table<TracabilitePeiRecord> aliased) {
        this(alias, aliased, null);
    }

    private TracabilitePei(Name alias, Table<TracabilitePeiRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>edp.tracabilite_pei</code> table reference
     */
    public TracabilitePei(String alias) {
        this(DSL.name(alias), TRACABILITE_PEI);
    }

    /**
     * Create an aliased <code>edp.tracabilite_pei</code> table reference
     */
    public TracabilitePei(Name alias) {
        this(alias, TRACABILITE_PEI);
    }

    /**
     * Create a <code>edp.tracabilite_pei</code> table reference
     */
    public TracabilitePei() {
        this(DSL.name("tracabilite_pei"), null);
    }

    public <O extends Record> TracabilitePei(Table<O> child, ForeignKey<O, TracabilitePeiRecord> key) {
        super(child, key, TRACABILITE_PEI);
    }

    @Override
    public Schema getSchema() {
        return Edp.EDP;
    }

    @Override
    public Identity<TracabilitePeiRecord, Integer> getIdentity() {
        return (Identity<TracabilitePeiRecord, Integer>) super.getIdentity();
    }

    @Override
    public UniqueKey<TracabilitePeiRecord> getPrimaryKey() {
        return Keys.TRACABILITE_PEI_PKEY;
    }

    @Override
    public List<UniqueKey<TracabilitePeiRecord>> getKeys() {
        return Arrays.<UniqueKey<TracabilitePeiRecord>>asList(Keys.TRACABILITE_PEI_PKEY);
    }

    @Override
    public TracabilitePei as(String alias) {
        return new TracabilitePei(DSL.name(alias), this);
    }

    @Override
    public TracabilitePei as(Name alias) {
        return new TracabilitePei(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public TracabilitePei rename(String name) {
        return new TracabilitePei(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public TracabilitePei rename(Name name) {
        return new TracabilitePei(name, null);
    }
}
