/*
 * This file is generated by jOOQ.
 */
package fr.eaudeparis.syncremocra.db.model.tables.records;


import fr.eaudeparis.syncremocra.db.model.tables.ReferentielHydrantDiametres;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReferentielHydrantDiametresRecord extends UpdatableRecordImpl<ReferentielHydrantDiametresRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>edp.referentiel_hydrant_diametres.code_bspp</code>.
     */
    public ReferentielHydrantDiametresRecord setCodeBspp(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>edp.referentiel_hydrant_diametres.code_bspp</code>.
     */
    public String getCodeBspp() {
        return (String) get(0);
    }

    /**
     * Setter for <code>edp.referentiel_hydrant_diametres.code_edp</code>.
     */
    public ReferentielHydrantDiametresRecord setCodeEdp(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>edp.referentiel_hydrant_diametres.code_edp</code>.
     */
    public String getCodeEdp() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return ReferentielHydrantDiametres.REFERENTIEL_HYDRANT_DIAMETRES.CODE_BSPP;
    }

    @Override
    public Field<String> field2() {
        return ReferentielHydrantDiametres.REFERENTIEL_HYDRANT_DIAMETRES.CODE_EDP;
    }

    @Override
    public String component1() {
        return getCodeBspp();
    }

    @Override
    public String component2() {
        return getCodeEdp();
    }

    @Override
    public String value1() {
        return getCodeBspp();
    }

    @Override
    public String value2() {
        return getCodeEdp();
    }

    @Override
    public ReferentielHydrantDiametresRecord value1(String value) {
        setCodeBspp(value);
        return this;
    }

    @Override
    public ReferentielHydrantDiametresRecord value2(String value) {
        setCodeEdp(value);
        return this;
    }

    @Override
    public ReferentielHydrantDiametresRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReferentielHydrantDiametresRecord
     */
    public ReferentielHydrantDiametresRecord() {
        super(ReferentielHydrantDiametres.REFERENTIEL_HYDRANT_DIAMETRES);
    }

    /**
     * Create a detached, initialised ReferentielHydrantDiametresRecord
     */
    public ReferentielHydrantDiametresRecord(String codeBspp, String codeEdp) {
        super(ReferentielHydrantDiametres.REFERENTIEL_HYDRANT_DIAMETRES);

        setCodeBspp(codeBspp);
        setCodeEdp(codeEdp);
    }
}
