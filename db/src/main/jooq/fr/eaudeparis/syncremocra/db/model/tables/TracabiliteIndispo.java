/*
 * This file is generated by jOOQ.
 */
package fr.eaudeparis.syncremocra.db.model.tables;

import fr.eaudeparis.syncremocra.db.model.Edp;
import fr.eaudeparis.syncremocra.db.model.Keys;
import fr.eaudeparis.syncremocra.db.model.tables.records.TracabiliteIndispoRecord;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class TracabiliteIndispo extends TableImpl<TracabiliteIndispoRecord> {

  private static final long serialVersionUID = 1L;

  /** The reference instance of <code>edp.tracabilite_indispo</code> */
  public static final TracabiliteIndispo TRACABILITE_INDISPO = new TracabiliteIndispo();

  /** The class holding records for this type */
  @Override
  public Class<TracabiliteIndispoRecord> getRecordType() {
    return TracabiliteIndispoRecord.class;
  }

  /** The column <code>edp.tracabilite_indispo.id</code>. */
  public final TableField<TracabiliteIndispoRecord, Integer> ID =
      createField(DSL.name("id"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

  /** The column <code>edp.tracabilite_indispo.id_traca_pei</code>. */
  public final TableField<TracabiliteIndispoRecord, Long> ID_TRACA_PEI =
      createField(DSL.name("id_traca_pei"), SQLDataType.BIGINT.nullable(false), this, "");

  /** The column <code>edp.tracabilite_indispo.reference</code>. */
  public final TableField<TracabiliteIndispoRecord, String> REFERENCE =
      createField(DSL.name("reference"), SQLDataType.VARCHAR(15), this, "");

  /** The column <code>edp.tracabilite_indispo.motif_indispo</code>. */
  public final TableField<TracabiliteIndispoRecord, String> MOTIF_INDISPO =
      createField(DSL.name("motif_indispo"), SQLDataType.VARCHAR, this, "");

  /** The column <code>edp.tracabilite_indispo.date_debut</code>. */
  public final TableField<TracabiliteIndispoRecord, LocalDateTime> DATE_DEBUT =
      createField(DSL.name("date_debut"), SQLDataType.LOCALDATETIME(6), this, "");

  /** The column <code>edp.tracabilite_indispo.date_fin_prevue</code>. */
  public final TableField<TracabiliteIndispoRecord, LocalDateTime> DATE_FIN_PREVUE =
      createField(DSL.name("date_fin_prevue"), SQLDataType.LOCALDATETIME(6), this, "");

  /** The column <code>edp.tracabilite_indispo.date_traca</code>. */
  public final TableField<TracabiliteIndispoRecord, LocalDateTime> DATE_TRACA =
      createField(DSL.name("date_traca"), SQLDataType.LOCALDATETIME(6), this, "");

  /** The column <code>edp.tracabilite_indispo.statut_motif_indispo</code>. */
  public final TableField<TracabiliteIndispoRecord, String> STATUT_MOTIF_INDISPO =
      createField(DSL.name("statut_motif_indispo"), SQLDataType.VARCHAR(15), this, "");

  private TracabiliteIndispo(Name alias, Table<TracabiliteIndispoRecord> aliased) {
    this(alias, aliased, null);
  }

  private TracabiliteIndispo(
      Name alias, Table<TracabiliteIndispoRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  /** Create an aliased <code>edp.tracabilite_indispo</code> table reference */
  public TracabiliteIndispo(String alias) {
    this(DSL.name(alias), TRACABILITE_INDISPO);
  }

  /** Create an aliased <code>edp.tracabilite_indispo</code> table reference */
  public TracabiliteIndispo(Name alias) {
    this(alias, TRACABILITE_INDISPO);
  }

  /** Create a <code>edp.tracabilite_indispo</code> table reference */
  public TracabiliteIndispo() {
    this(DSL.name("tracabilite_indispo"), null);
  }

  public <O extends Record> TracabiliteIndispo(
      Table<O> child, ForeignKey<O, TracabiliteIndispoRecord> key) {
    super(child, key, TRACABILITE_INDISPO);
  }

  @Override
  public Schema getSchema() {
    return Edp.EDP;
  }

  @Override
  public Identity<TracabiliteIndispoRecord, Integer> getIdentity() {
    return (Identity<TracabiliteIndispoRecord, Integer>) super.getIdentity();
  }

  @Override
  public UniqueKey<TracabiliteIndispoRecord> getPrimaryKey() {
    return Keys.TRACABILITE_INDISPO_PKEY;
  }

  @Override
  public List<UniqueKey<TracabiliteIndispoRecord>> getKeys() {
    return Arrays.<UniqueKey<TracabiliteIndispoRecord>>asList(Keys.TRACABILITE_INDISPO_PKEY);
  }

  @Override
  public List<ForeignKey<TracabiliteIndispoRecord, ?>> getReferences() {
    return Arrays.<ForeignKey<TracabiliteIndispoRecord, ?>>asList(
        Keys.TRACABILITE_INDISPO__FK_ID_TRACA_PEI);
  }

  private transient TracabilitePei _tracabilitePei;

  public TracabilitePei tracabilitePei() {
    if (_tracabilitePei == null)
      _tracabilitePei = new TracabilitePei(this, Keys.TRACABILITE_INDISPO__FK_ID_TRACA_PEI);

    return _tracabilitePei;
  }

  @Override
  public TracabiliteIndispo as(String alias) {
    return new TracabiliteIndispo(DSL.name(alias), this);
  }

  @Override
  public TracabiliteIndispo as(Name alias) {
    return new TracabiliteIndispo(alias, this);
  }

  /** Rename this table */
  @Override
  public TracabiliteIndispo rename(String name) {
    return new TracabiliteIndispo(DSL.name(name), null);
  }

  /** Rename this table */
  @Override
  public TracabiliteIndispo rename(Name name) {
    return new TracabiliteIndispo(name, null);
  }

  // -------------------------------------------------------------------------
  // Row8 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row8<Integer, Long, String, String, LocalDateTime, LocalDateTime, LocalDateTime, String>
      fieldsRow() {
    return (Row8) super.fieldsRow();
  }
}
