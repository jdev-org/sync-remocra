/*
 * This file is generated by jOOQ.
 */
package fr.eaudeparis.syncremocra.db.model.tables;

import fr.eaudeparis.syncremocra.db.model.Edp;
import fr.eaudeparis.syncremocra.db.model.tables.records.VueVisiteRecord;
import java.time.LocalDateTime;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row8;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;

/** This class is generated by jOOQ. */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class VueVisite extends TableImpl<VueVisiteRecord> {

  private static final long serialVersionUID = 1L;

  /** The reference instance of <code>edp.vue_visite</code> */
  public static final VueVisite VUE_VISITE = new VueVisite();

  /** The class holding records for this type */
  @Override
  public Class<VueVisiteRecord> getRecordType() {
    return VueVisiteRecord.class;
  }

  /** The column <code>edp.vue_visite.gid_edp</code>. */
  public final TableField<VueVisiteRecord, Integer> GID_EDP =
      createField(
          DSL.name("gid_edp"), SQLDataType.INTEGER.nullable(false).identity(true), this, "");

  /** The column <code>edp.vue_visite.reference</code>. */
  public final TableField<VueVisiteRecord, String> REFERENCE =
      createField(DSL.name("reference"), SQLDataType.VARCHAR, this, "");

  /** The column <code>edp.vue_visite.date_visite</code>. */
  public final TableField<VueVisiteRecord, LocalDateTime> DATE_VISITE =
      createField(DSL.name("date_visite"), SQLDataType.LOCALDATETIME(6), this, "");

  /** The column <code>edp.vue_visite.type_visite</code>. */
  public final TableField<VueVisiteRecord, String> TYPE_VISITE =
      createField(DSL.name("type_visite"), SQLDataType.VARCHAR, this, "");

  /** The column <code>edp.vue_visite.essaie_pression_static</code>. */
  public final TableField<VueVisiteRecord, Integer> ESSAIE_PRESSION_STATIC =
      createField(DSL.name("essaie_pression_static"), SQLDataType.INTEGER, this, "");

  /** The column <code>edp.vue_visite.essaie_pression_dynamique</code>. */
  public final TableField<VueVisiteRecord, Integer> ESSAIE_PRESSION_DYNAMIQUE =
      createField(DSL.name("essaie_pression_dynamique"), SQLDataType.INTEGER, this, "");

  /** The column <code>edp.vue_visite.essaie_debit</code>. */
  public final TableField<VueVisiteRecord, Integer> ESSAIE_DEBIT =
      createField(DSL.name("essaie_debit"), SQLDataType.INTEGER, this, "");

  /** The column <code>edp.vue_visite.date_maj_e</code>. */
  public final TableField<VueVisiteRecord, LocalDateTime> DATE_MAJ_E =
      createField(DSL.name("date_maj_e"), SQLDataType.LOCALDATETIME(6), this, "");

  private VueVisite(Name alias, Table<VueVisiteRecord> aliased) {
    this(alias, aliased, null);
  }

  private VueVisite(Name alias, Table<VueVisiteRecord> aliased, Field<?>[] parameters) {
    super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
  }

  /** Create an aliased <code>edp.vue_visite</code> table reference */
  public VueVisite(String alias) {
    this(DSL.name(alias), VUE_VISITE);
  }

  /** Create an aliased <code>edp.vue_visite</code> table reference */
  public VueVisite(Name alias) {
    this(alias, VUE_VISITE);
  }

  /** Create a <code>edp.vue_visite</code> table reference */
  public VueVisite() {
    this(DSL.name("vue_visite"), null);
  }

  public <O extends Record> VueVisite(Table<O> child, ForeignKey<O, VueVisiteRecord> key) {
    super(child, key, VUE_VISITE);
  }

  @Override
  public Schema getSchema() {
    return Edp.EDP;
  }

  @Override
  public Identity<VueVisiteRecord, Integer> getIdentity() {
    return (Identity<VueVisiteRecord, Integer>) super.getIdentity();
  }

  @Override
  public VueVisite as(String alias) {
    return new VueVisite(DSL.name(alias), this);
  }

  @Override
  public VueVisite as(Name alias) {
    return new VueVisite(alias, this);
  }

  /** Rename this table */
  @Override
  public VueVisite rename(String name) {
    return new VueVisite(DSL.name(name), null);
  }

  /** Rename this table */
  @Override
  public VueVisite rename(Name name) {
    return new VueVisite(name, null);
  }

  // -------------------------------------------------------------------------
  // Row8 type methods
  // -------------------------------------------------------------------------

  @Override
  public Row8<Integer, String, LocalDateTime, String, Integer, Integer, Integer, LocalDateTime>
      fieldsRow() {
    return (Row8) super.fieldsRow();
  }
}
